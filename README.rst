========
Planes
========

*Planes* is a very simple UAV simulator, desgined to aid in the development and
testing of UAV coordination mechanisms. The goal of the simulator is to acquire
and report statistics about the time it taskes for the given UAVs to visit a
number of Targets. This time will vary depending on the strategy used by the
planes, hence empirically showing which algorithm performs best on a given
scenario.

Development
===========

*Planes* is under heavy development. Thus, there are no binary releases of the
software. However, runnable jars can be generated by invoking the ``jar`` target
from the included *ant* `build.xml` file::

  cd /path/to/project
  ant jar

This command will create a _dist_ folder, containing the compiled program's jar
file and the required libs.

Usage
=========

In order to test the algorithm's behavior in a particular scenario, the said
scenario must be first generated. This is, *Planes* does not randomly generate 
scenarios when running. Instead, it includes a scenario generator, that produces
scenario descriptions. These descriptions can be saved to a file and then
"solved" by *Planes* using any of the implemented strategies.

After compiling the project, you can generate a sample scenario by invoking the
generator::

  cd /path/to/project
  java -cp dist/planes.jar es.csic.iiia.planes.generator.Generator > problem

You will see a bunch of characters in the console. This represent an horizontal
histogram of the times at which tasks will be sumitted throughout the scenario
lifetime. Just don't worry about it ;)

Once a sample scenario has been generated, we can proceed to actually "solve" it
using any of the inbuilt UAV coordination algorithms. You can see the simulator
options by launching it with the `-h` option::

  cd /path/to/project
  java -jar dist/planes.jar -h

Choose your settings and launch the simulator, specifying which scenario
description must be tested::

  java -jar dist/planes.jar -o nearest problem

