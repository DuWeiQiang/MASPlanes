# How the operator submits tasks to the planes.
#
#   random            Submit tasks to a random plane. This strategy can not be
#                       realized in the actual-world because the selected plane
#                       may not be in communication range of the operator.
#   nearest           Submit tasks to the plane that is currently nearest to
#                       them. This strategy can not be realized in the
#                       actual-world because the selected plane may not be in
#                       communication range of the operator.
#   nearest-inrange   Submit tasks to the plane that is nearest to it, and in
#                       communication range of the operator.
#   random-inrange    Submit tasks to the plane that is nearest to it, and in
#                       communication range of the operator.
operator-strategy=nearest-inrange

# Coordination method used by the planes.
#
#   none        Each plane fullfills the tasks that it has received, without
#                 coordinating with others.
#   auction     Planes coordinate with each other using auctions.
#   maxsum      Planes coordinate using max-sum.
planes=none

# Mechanism used by the planes to evaluate the cost of performing tasks.
#
#   independent-distance    The cost of performing a task is the distance
#                             between the plane and the task. This strategy does
#                             not take into account any other tasks that the
#                             plane also has to complete.
#
#   independent-distance-battery
#                           The cost of performing a task is the distance
#                             between the plane and the task. If the plane does
#                             not have enough battery, the distance to the
#\u00a0                            charging station is also taken into account. This
#\u00a0                            strategy does not take into account any other
#\u00a0                            tasks that the plane also has to complete.
task-evaluation=independent-distance-battery


################################################################################
# AUCTION SETTINGS
#
# Planes that coordinate by using auctions do it using single-unit, parallel
# auctions. Every <auction-every> seconds, all planes start an (independent)
# auction for each of the tasks they own. In the next step, all other planes
# in range bid for all the tasks of their neighbors. Finally, two seconds
# (steps) after the auctions began, the owner plane chooses a winner for each
# of its tasks (which may be itself). In case the winner is another plane, it
# transfers the ownership of that task to the new owner.
################################################################################

#\u00a0Number of seconds (cycles) between auctions
auction-every = 100


################################################################################
# MAX-SUM SETTINGS
#
# Planes that coordinate by using max-sum do it in cycles. That is, the whole
# coordination procedure stats every <maxsum-start-every> iterations. Then, the
# planes execute <maxsum-iterations> of the max-sum algorithm. Finally, the
# tasks choose which plane will be responsible for them. In case a task has
# chosen a different owner than when the procedure started, the old owner
# transfers the task to the new one.
################################################################################

#\u00a0Number of maxsum iterations to perform before making a decision.
maxsum-iterations = 5

# Number of seconds between maxsum cycles
maxsum-start-every = 10